name: Issue Reviewer

on:
  issues:
    types: [opened, edited, labeled]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Create label if not exists
        uses: actions/github-script@v7
        with:
          script: |
            const labelName = "issue review"
            const { data: existingLabels } = await github.rest.issues.listLabelsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo
            })
            const labelExists = existingLabels.some(label => label.name === labelName)
            if (!labelExists) {
              await github.rest.issues.createLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: labelName,
                color: "f29513",
                description: "Label for issue review"
              })
            }

  review:
    needs: setup
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'issue review') && (github.event.action == 'edited' || github.event.action == 'labeled')
    steps:
      - name: Add comment
        uses: actions/github-script@v7
        with:
          script: |
            // TODO: Write the logic to generate comments based on the content of the issue here

            const commentBody = 'ðŸ‘‹ Thanks for updating the issue!'
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            })

      # TODO: Implement hiding old comments when GitHub provides an API for changing comment states (e.g., to 'outdated' or 'off-topic').
      # ref: https://docs.github.com/en/rest/issues
